version: '3.7'

services:                                                                       
    database:                                                   
        image: mongo:latest
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=pass
            - MONGO_INITDB_DATABASE=recommendr
        volumes:
            - dbdata:/data/db
            - init-users.js:/docker-entrypoint-initdb.d/init-users.js:ro
        networks:
            - idpnet
        expose:
            - 27017
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement: 
                constraints: [node.role == manager]
    
    backend:
        image: vlasebian/idp-backend:latest
        command: npm run dev-start
        ports:
            - '3000:3000'
        networks:
            - idpnet
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        depends_on:
            - database
    
    frontend:
        image: vlasebian/idp-frontend:latest
        command: /bin/sh -c "exec nginx -g 'daemon off;'"
        ports:
            - '80:80'
        networks:
            - idpnet
        deploy:
            replicas: 2
            restart_policy:
                condition: on-failure
        depends_on: 
            - backend
    
    admin:
        image: vlasebian/idp-admin:latest
        command: /bin/sh -c "exec nginx -g 'daemon off;'"
        ports:
            - '81:80'
        networks:
            - idpnet
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        depends_on: 
            - backend

    visualizer:
        image: dockersamples/visualizer:stable
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
        ports:
            - '8080:8080'
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement: 
                constraints: [node.role == manager]
networks:
    idpnet:
